=====
5.3.0
=====

:right:`2024-08-06`

.. highlight:: typescript

.. rst-class:: release-notes

BREAKING
========

.. code-block::
  :caption: squared.base

  class Node {
      toFloat(attr: CssStyleAttr, fallback?: number, options?: CssInitialOptions): number; // Uses Node.valueOf without options
      toInt(attr: CssStyleAttr, fallback?: number, options?: CssInitialOptions): number;
  }

  class NodeUI {
      get textIndent(): number; // Detection for "each-line" and "hanging"
  }

.. code-block::
  :caption: squared.lib.client
  :emphasize-lines: 4

  interface UserAgentData {
      name: "Chrome";

      name: "Chrome" | "Chromium"; // getUserAgentData
  }

.. code-block::
  :caption: squared.lib.css
  :emphasize-lines: 9

  /*
    switch (attr) {
      case "width":
      case "maxWidth":
      case "minWidth": 
      case "height":
      case "maxHeight":
      case "minHeight":
        return "px" | "%";
  */
  function calculateStyle(element: StyleElement, attr: string, value: string, boundingBox?: Null<Dimension>): string;

ADDED
=====

.. code-block::
  :caption: squared.base

  interface ControllerSettingsStyleUI {
      inputFontSize?: string;
      buttonFontSize?: string;
      textareaFontSize?: string;
      selectFontSize?: string;
      h1FontSize?: string;
      h2FontSize?: string;
      h3FontSize?: string;
      h4FontSize?: string;
      h5FontSize?: string;
      h6FontSize?: string;
      rtFontSize?: string;
  }

  interface ExcludeOptions {
      optimization?: number;
  }

  interface AutoMargin {
      leftRightAnchor?: boolean;
      topBottomAnchor?: boolean;
  }

  interface HasOptions {
      inherit?: boolean;
  }

  class Node {
      get voidElement(): boolean;
      get nowrapWhiteSpace(): boolean;
  }

  class NodeUI {
      hasOptimization(value: number): boolean;
      get afterLineBreak(): boolean;
      get wordSpacing(): number;
  }

.. code-block::
  :caption: squared.base.lib

  /* constant */

  enum STAGE_OPTIMIZATION {
      EXCLUDE = 1,
      INHERIT = 2,
      ALIGNMENT = 4,
      POSITION = 8,
      DIMENSION = 16,
      MARGIN = 32,
      PADDING = 64,
      BASELINE = 128,
      WHITESPACE = 256,
      TRANSLATE = 512,
      TRANSFORM = 1024
  }

  /* dom */

  function causesLineBreak(element: Element): boolean;

.. code-block::
  :caption: squared.lib.client

  interface UserAgentFeatures {
      RULES: {
          ADOPTED_STYLE_SHEET: boolean;
      };
  }

.. code-block::
  :caption: chrome.base

  interface FileActionOptions {
      removeBinaries?: boolean;
  }

  interface FileActionAttribute {
      saveAs?: {
          video?: SaveAsOptions;
          audio?: SaveAsOptions;
          raw?: SaveAsOptions;
      };
  }

MODIFIED
========

.. code-block::
  :caption: squared

  function toString(projectId?: string): string; // projectId

.. code-block::
  :caption: squared.base

  interface HasOptions {
      type?: number; // CSS_UNIT.DECIMAL | CSS_UNIT.INTEGER
  }

DEPRECATED
==========

.. code-block::
  :caption: squared.base

  interface ControllerSettingsStyleUI {
      formFontSize: string;
  }

  class ApplicationUI {
      get layouts(): FileAsset[]; // ApplicationUI.getProject().layouts
  }